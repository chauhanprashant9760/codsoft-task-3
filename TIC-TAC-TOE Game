#include <iostream>
#include <vector>

using namespace std;

// Function to print the Tic-Tac-Toe board
void printBoard(const vector<vector<char>>& board) {
    cout << "Tic-Tac-Toe" << endl;
    cout << "-------------" << endl;
    for (int i = 0; i < 3; i++) {
        cout << "| ";
        for (int j = 0; j < 3; j++) {
            cout << board[i][j] << " | ";
        }
        cout << endl;
        cout << "-------------" << endl;
    }
}

// Function to check if the game is over
bool isGameOver(const vector<vector<char>>& board) {
    // Check rows, columns, and diagonals for a win
    for (int i = 0; i < 3; i++) {
        if (board[i][0] != ' ' && board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
            return true;
        }
        if (board[0][i] != ' ' && board[0][i] == board[1][i] && board[1][i] == board[2][i]) {
            return true;
        }
    }
    if (board[0][0] != ' ' && board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
        return true;
    }
    if (board[0][2] != ' ' && board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
        return true;
    }

    // Check for a draw
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ') {
                return false; // There are empty cells, the game is not over yet.
            }
        }
    }

    // If no winner and no empty cells, it's a draw.
    return true;
}

int main() {
    vector<vector<char>> board(3, vector<char>(3, ' '));
    bool player1Turn = true;
    bool gameOver = false;

    while (!gameOver) {
        // Print the current board
        printBoard(board);

        // Determine the current player
        char currentPlayerSymbol = (player1Turn) ? 'X' : 'O';
        cout << "Player " << ((player1Turn) ? "1" : "2") << ", enter row (0-2) and column (0-2) to place " << currentPlayerSymbol << ": ";
        int row, col;
        cin >> row >> col;

        // Check if the cell is empty and within bounds
        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ') {
            // Place the player's symbol in the chosen cell
            board[row][col] = currentPlayerSymbol;
            player1Turn = !player1Turn; // Switch to the other player's turn
        } else {
            cout << "Invalid move. Try again." << endl;
        }

        // Check if the game is over
        gameOver = isGameOver(board);
    }

    // Print the final board and result
    printBoard(board);
    if (isGameOver(board)) {
        cout << "The game is over!";
        if (player1Turn) {
            cout << " Player 2 (O) wins!" << endl;
        } else {
            cout << " Player 1 (X) wins!" << endl;
        }
    } else {
        cout << "It's a draw!" << endl;
    }

    return 0;
}
